WARNING:root:Did not find any loss value from model output, your pipeline will be in inference mode. If you want your pipeline to be in training mode, please specify a loss value via `output_loss_value_spec`.
INFO:root:[root] Creating pipeline driver with 3 workers: [0, 1, 2]
DEBUG:root:[root] Sending stage_id = 0 mod to worker
INFO:root:[0] Instantiating RankWorker
DEBUG:root:[root] Sending stage_id = 1 mod to worker
DEBUG:root:[root] Sending stage_id = 2 mod to worker
INFO:root:Instantiating PipeStageExecutor for stage 0
DEBUG:root:[root] Waiting stage_id = 0 mod to be confirmed by worker
DEBUG:root:[root] Waiting stage_id = 1 mod to be confirmed by worker
DEBUG:root:[root] Waiting stage_id = 2 mod to be confirmed by worker
INFO:root:[root] Running pipeline with 64 micro-batches
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 0
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 1
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 2
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 3
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 4
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 5
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 6
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 7
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 8
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 9
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 10
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 11
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 12
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 13
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 14
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 15
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 16
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 17
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 18
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 19
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 20
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 21
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 22
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 23
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 24
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 25
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 26
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 27
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 28
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 29
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 30
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 31
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 32
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 33
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 34
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 35
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 36
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 37
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 38
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 39
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 40
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 41
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 42
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 43
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 44
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 45
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 46
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 47
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 48
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 49
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 50
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 51
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 52
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 53
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 54
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 55
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 56
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 57
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 58
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 59
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 60
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 61
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 62
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] Instantiating microbatch interpreter for chunk 63
DEBUG:root:[root] RemoteInterpreter created with 5 nodes
DEBUG:root:[root] 64 instantiated
DEBUG:root:[0] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[1] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[2] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[3] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[4] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[5] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[6] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[7] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[8] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[9] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[10] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[11] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[12] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[13] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[14] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[15] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[16] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[17] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[18] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[19] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[20] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[21] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[22] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[23] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[24] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[25] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[26] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[27] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[28] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[29] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[30] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[31] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[32] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[33] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[34] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[35] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[36] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[37] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[38] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[39] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[40] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[41] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[42] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[43] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[44] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[45] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[46] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[47] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[48] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[49] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[50] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[51] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[52] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[53] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[54] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[55] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[56] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[57] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[58] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[59] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[60] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[61] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[62] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[63] Issue command to run %x : [#users=1] = placeholder[target=x]
DEBUG:root:[0] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][0] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][0] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][0] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[1] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][0] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][1] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][0] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 0_submod_0
DEBUG:root:[0][0] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][1] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][1] Invoke call found 0 ValueReference arguments
DEBUG:root:[0] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][0] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][1] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 1_submod_0
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[1] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][0] Executing transfer of value ValueReference(0, 0_submod_0) initiated by stage 1 for 0_submod_1
DEBUG:root:[0][1] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0][0] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[root][1] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
INFO:root:[0] Running forward module for microbatch 0
DEBUG:root:[2] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][1] Executing transfer of value ValueReference(0, 1_submod_0) initiated by stage 1 for 1_submod_1
DEBUG:root:[root][2] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][0] Populating result of type <class 'torch.Tensor'> for 0_submod_0
DEBUG:root:[1] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][1] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[2] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][2] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][2] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][2] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][2] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 2_submod_0
DEBUG:root:[0][2] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][1] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[3] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
INFO:root:[0] Running forward module for microbatch 1
DEBUG:root:[0][2] Executing transfer of value ValueReference(0, 2_submod_0) initiated by stage 1 for 2_submod_1
DEBUG:root:[root][3] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][1] Populating result of type <class 'torch.Tensor'> for 1_submod_0
DEBUG:root:[2] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][2] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[3] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][3] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][3] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][3] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][3] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 3_submod_0
DEBUG:root:[0][3] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][3] Executing transfer of value ValueReference(0, 3_submod_0) initiated by stage 1 for 3_submod_1
DEBUG:root:[0][2] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[4] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
INFO:root:[0] Running forward module for microbatch 2
DEBUG:root:[root][4] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[3] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][3] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][4] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][4] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][4] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 4_submod_0
DEBUG:root:[4] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][4] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys(['3_submod_0'])
DEBUG:root:[root][4] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][2] Populating result of type <class 'torch.Tensor'> for 2_submod_0
DEBUG:root:[5] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][5] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0] Dequeueing workitem from set of 2
DEBUG:root:[0][3] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 3
DEBUG:root:[0][5] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[4] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][4] Executing transfer of value ValueReference(0, 4_submod_0) initiated by stage 1 for 4_submod_1
DEBUG:root:[0][5] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][5] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 5_submod_0
DEBUG:root:[0][5] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys(['4_submod_0'])
DEBUG:root:[0][3] Populating result of type <class 'torch.Tensor'> for 3_submod_0
DEBUG:root:[root][4] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0] Dequeueing workitem from set of 2
DEBUG:root:[0][4] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 4
DEBUG:root:[0][4] Populating result of type <class 'torch.Tensor'> for 4_submod_0
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][5] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 5
DEBUG:root:[0][5] Populating result of type <class 'torch.Tensor'> for 5_submod_0
DEBUG:root:[5] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][5] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[6] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][6] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[5] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][5] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][6] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][6] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][6] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 6_submod_0
DEBUG:root:[0][6] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][5] Executing transfer of value ValueReference(0, 5_submod_0) initiated by stage 1 for 5_submod_1
DEBUG:root:[6] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][6] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][6] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[7] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][7] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
INFO:root:[0] Running forward module for microbatch 6
DEBUG:root:[0][6] Populating result of type <class 'torch.Tensor'> for 6_submod_0
DEBUG:root:[6] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][7] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][7] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][7] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 7_submod_0
DEBUG:root:[0][7] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][6] Executing transfer of value ValueReference(0, 6_submod_0) initiated by stage 1 for 6_submod_1
DEBUG:root:[root][6] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][7] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 7
DEBUG:root:[0][7] Populating result of type <class 'torch.Tensor'> for 7_submod_0
DEBUG:root:[7] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][7] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[8] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][8] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[7] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][7] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][8] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][8] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][8] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 8_submod_0
DEBUG:root:[0][8] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[8] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][8] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][7] Executing transfer of value ValueReference(0, 7_submod_0) initiated by stage 1 for 7_submod_1
DEBUG:root:[0][8] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[9] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
INFO:root:[0] Running forward module for microbatch 8
DEBUG:root:[root][9] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][8] Populating result of type <class 'torch.Tensor'> for 8_submod_0
DEBUG:root:[8] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][9] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][8] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][8] Executing transfer of value ValueReference(0, 8_submod_0) initiated by stage 1 for 8_submod_1
DEBUG:root:[0][9] Invoke call found 0 ValueReference arguments
DEBUG:root:[9] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][9] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 9_submod_0
DEBUG:root:[0][9] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[root][9] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[10] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[root][10] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][9] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 9
DEBUG:root:[9] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][9] Executing transfer of value ValueReference(0, 9_submod_0) initiated by stage 1 for 9_submod_1
DEBUG:root:[root][9] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][10] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][10] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][10] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 10_submod_0
DEBUG:root:[0][10] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][9] Populating result of type <class 'torch.Tensor'> for 9_submod_0
DEBUG:root:[10] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][10] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][10] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 10
DEBUG:root:[11] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][11] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][10] Populating result of type <class 'torch.Tensor'> for 10_submod_0
DEBUG:root:[10] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][11] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][11] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][10] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][11] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 11_submod_0
DEBUG:root:[0][11] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][10] Executing transfer of value ValueReference(0, 10_submod_0) initiated by stage 1 for 10_submod_1
DEBUG:root:[11] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][11] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][11] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 11
DEBUG:root:[12] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][12] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][11] Populating result of type <class 'torch.Tensor'> for 11_submod_0
DEBUG:root:[11] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][11] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][12] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][12] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][12] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 12_submod_0
DEBUG:root:[0][12] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][11] Executing transfer of value ValueReference(0, 11_submod_0) initiated by stage 1 for 11_submod_1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][12] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 12
DEBUG:root:[12] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][12] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][12] Populating result of type <class 'torch.Tensor'> for 12_submod_0
DEBUG:root:[13] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][13] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[12] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][13] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][13] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][12] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][13] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 13_submod_0
DEBUG:root:[0][13] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[13] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][12] Executing transfer of value ValueReference(0, 12_submod_0) initiated by stage 1 for 12_submod_1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][13] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[root][13] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
INFO:root:[0] Running forward module for microbatch 13
DEBUG:root:[14] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][13] Populating result of type <class 'torch.Tensor'> for 13_submod_0
DEBUG:root:[root][14] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[13] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][13] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][13] Executing transfer of value ValueReference(0, 13_submod_0) initiated by stage 1 for 13_submod_1
DEBUG:root:[0][14] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][14] Invoke call found 0 ValueReference arguments
DEBUG:root:[14] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][14] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 14_submod_0
DEBUG:root:[0][14] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[root][14] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][14] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 14
DEBUG:root:[15] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][15] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][14] Executing transfer of value ValueReference(0, 14_submod_0) initiated by stage 1 for 14_submod_1
DEBUG:root:[0][14] Populating result of type <class 'torch.Tensor'> for 14_submod_0
DEBUG:root:[14] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][14] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][15] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[15] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][15] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][15] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][15] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 15_submod_0
DEBUG:root:[0][15] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[16] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][15] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 15
DEBUG:root:[root][16] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][15] Executing transfer of value ValueReference(0, 15_submod_0) initiated by stage 1 for 15_submod_1
DEBUG:root:[0][15] Populating result of type <class 'torch.Tensor'> for 15_submod_0
DEBUG:root:[15] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][16] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][16] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][15] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][16] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 16_submod_0
DEBUG:root:[0][16] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[16] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][16] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[root][16] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
INFO:root:[0] Running forward module for microbatch 16
DEBUG:root:[17] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][17] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][16] Populating result of type <class 'torch.Tensor'> for 16_submod_0
DEBUG:root:[0][16] Executing transfer of value ValueReference(0, 16_submod_0) initiated by stage 1 for 16_submod_1
DEBUG:root:[16] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][16] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][17] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][17] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][17] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 17_submod_0
DEBUG:root:[0][17] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[17] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[root][17] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][17] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 17
DEBUG:root:[0][17] Populating result of type <class 'torch.Tensor'> for 17_submod_0
DEBUG:root:[18] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][18] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[17] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][18] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][18] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][18] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 18_submod_0
DEBUG:root:[root][17] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][17] Executing transfer of value ValueReference(0, 17_submod_0) initiated by stage 1 for 17_submod_1
DEBUG:root:[0][18] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[18] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[root][18] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[19] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][18] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[root][19] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
INFO:root:[0] Running forward module for microbatch 18
DEBUG:root:[18] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][18] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][19] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][19] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][19] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 19_submod_0
DEBUG:root:[0][19] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[19] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][18] Executing transfer of value ValueReference(0, 18_submod_0) initiated by stage 1 for 18_submod_1
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][18] Populating result of type <class 'torch.Tensor'> for 18_submod_0
DEBUG:root:[root][19] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][19] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 19
DEBUG:root:[0][19] Populating result of type <class 'torch.Tensor'> for 19_submod_0
DEBUG:root:[20] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][20] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[19] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][19] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][20] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][20] Invoke call found 0 ValueReference arguments
DEBUG:root:[20] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][20] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 20_submod_0
DEBUG:root:[0][20] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[root][20] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][19] Executing transfer of value ValueReference(0, 19_submod_0) initiated by stage 1 for 19_submod_1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][20] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 20
DEBUG:root:[0][20] Populating result of type <class 'torch.Tensor'> for 20_submod_0
DEBUG:root:[21] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][21] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][20] Executing transfer of value ValueReference(0, 20_submod_0) initiated by stage 1 for 20_submod_1
DEBUG:root:[20] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][20] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][21] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][21] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][21] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 21_submod_0
DEBUG:root:[0][21] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[21] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][21] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 21
DEBUG:root:[0][21] Populating result of type <class 'torch.Tensor'> for 21_submod_0
DEBUG:root:[root][21] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[22] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][22] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[21] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][21] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][22] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[22] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][21] Executing transfer of value ValueReference(0, 21_submod_0) initiated by stage 1 for 21_submod_1
DEBUG:root:[0][22] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][22] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][22] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 22_submod_0
DEBUG:root:[0][22] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[23] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[root][23] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][22] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 22
DEBUG:root:[22] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][22] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][22] Executing transfer of value ValueReference(0, 22_submod_0) initiated by stage 1 for 22_submod_1
DEBUG:root:[0][23] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][23] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][23] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 23_submod_0
DEBUG:root:[23] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][23] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[root][23] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][22] Populating result of type <class 'torch.Tensor'> for 22_submod_0
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][23] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[24] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
INFO:root:[0] Running forward module for microbatch 23
DEBUG:root:[root][24] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][23] Populating result of type <class 'torch.Tensor'> for 23_submod_0
DEBUG:root:[0][23] Executing transfer of value ValueReference(0, 23_submod_0) initiated by stage 1 for 23_submod_1
DEBUG:root:[23] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][23] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][24] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[24] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][24] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][24] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][24] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 24_submod_0
DEBUG:root:[0][24] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[25] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][25] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][24] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 24
DEBUG:root:[0][24] Executing transfer of value ValueReference(0, 24_submod_0) initiated by stage 1 for 24_submod_1
DEBUG:root:[0][25] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][25] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][24] Populating result of type <class 'torch.Tensor'> for 24_submod_0
DEBUG:root:[24] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][25] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 25_submod_0
DEBUG:root:[root][24] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][25] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[25] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[root][25] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][25] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 25
DEBUG:root:[26] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][26] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][25] Populating result of type <class 'torch.Tensor'> for 25_submod_0
DEBUG:root:[25] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][26] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][25] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][26] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][26] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 26_submod_0
DEBUG:root:[0][26] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0][25] Executing transfer of value ValueReference(0, 25_submod_0) initiated by stage 1 for 25_submod_1
DEBUG:root:[26] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[root][26] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][26] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 26
DEBUG:root:[0][26] Populating result of type <class 'torch.Tensor'> for 26_submod_0
DEBUG:root:[27] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][27] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[26] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][27] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][27] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][26] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][26] Executing transfer of value ValueReference(0, 26_submod_0) initiated by stage 1 for 26_submod_1
DEBUG:root:[0][27] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 27_submod_0
DEBUG:root:[0][27] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[27] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][27] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 27
DEBUG:root:[0][27] Populating result of type <class 'torch.Tensor'> for 27_submod_0
DEBUG:root:[root][27] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[28] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][28] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[27] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][28] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][28] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][27] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][28] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 28_submod_0
DEBUG:root:[0][28] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[28] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][27] Executing transfer of value ValueReference(0, 27_submod_0) initiated by stage 1 for 27_submod_1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][28] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[root][28] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
INFO:root:[0] Running forward module for microbatch 28
DEBUG:root:[0][28] Populating result of type <class 'torch.Tensor'> for 28_submod_0
DEBUG:root:[29] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][29] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[28] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][28] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][29] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][29] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][29] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 29_submod_0
DEBUG:root:[0][29] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][28] Executing transfer of value ValueReference(0, 28_submod_0) initiated by stage 1 for 28_submod_1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][29] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 29
DEBUG:root:[0][29] Populating result of type <class 'torch.Tensor'> for 29_submod_0
DEBUG:root:[29] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][29] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[30] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][30] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[29] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][29] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][30] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][30] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][30] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 30_submod_0
DEBUG:root:[0][30] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][30] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 30
DEBUG:root:[0][30] Populating result of type <class 'torch.Tensor'> for 30_submod_0
DEBUG:root:[0][29] Executing transfer of value ValueReference(0, 29_submod_0) initiated by stage 1 for 29_submod_1
DEBUG:root:[30] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][30] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[31] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][31] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[30] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][30] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][31] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][31] Invoke call found 0 ValueReference arguments
DEBUG:root:[31] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][31] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 31_submod_0
DEBUG:root:[root][31] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][31] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0][30] Executing transfer of value ValueReference(0, 30_submod_0) initiated by stage 1 for 30_submod_1
DEBUG:root:[32] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[root][32] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][31] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 31
DEBUG:root:[0][31] Populating result of type <class 'torch.Tensor'> for 31_submod_0
DEBUG:root:[31] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][32] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][32] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][32] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 32_submod_0
DEBUG:root:[0][32] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][31] Executing transfer of value ValueReference(0, 31_submod_0) initiated by stage 1 for 31_submod_1
DEBUG:root:[root][31] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][32] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 32
DEBUG:root:[0][32] Populating result of type <class 'torch.Tensor'> for 32_submod_0
DEBUG:root:[32] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][32] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[33] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][33] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[32] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][32] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][33] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][33] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][33] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 33_submod_0
DEBUG:root:[0][33] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][32] Executing transfer of value ValueReference(0, 32_submod_0) initiated by stage 1 for 32_submod_1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][33] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 33
DEBUG:root:[0][33] Populating result of type <class 'torch.Tensor'> for 33_submod_0
DEBUG:root:[33] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][33] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[34] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][34] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[33] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][33] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][34] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][34] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][34] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 34_submod_0
DEBUG:root:[34] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][34] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0][33] Executing transfer of value ValueReference(0, 33_submod_0) initiated by stage 1 for 33_submod_1
DEBUG:root:[root][34] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][34] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 34
DEBUG:root:[0][34] Populating result of type <class 'torch.Tensor'> for 34_submod_0
DEBUG:root:[35] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][35] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][34] Executing transfer of value ValueReference(0, 34_submod_0) initiated by stage 1 for 34_submod_1
DEBUG:root:[34] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][35] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][34] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][35] Invoke call found 0 ValueReference arguments
DEBUG:root:[35] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][35] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 35_submod_0
DEBUG:root:[root][35] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][35] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[36] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[root][36] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][35] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[35] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][36] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][36] Invoke call found 0 ValueReference arguments
INFO:root:[0] Running forward module for microbatch 35
DEBUG:root:[root][35] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][35] Populating result of type <class 'torch.Tensor'> for 35_submod_0
DEBUG:root:[0][35] Executing transfer of value ValueReference(0, 35_submod_0) initiated by stage 1 for 35_submod_1
DEBUG:root:[0][36] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 36_submod_0
DEBUG:root:[0][36] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][36] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 36
DEBUG:root:[0][36] Populating result of type <class 'torch.Tensor'> for 36_submod_0
DEBUG:root:[36] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][36] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[37] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][37] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[36] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][36] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][37] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][36] Executing transfer of value ValueReference(0, 36_submod_0) initiated by stage 1 for 36_submod_1
DEBUG:root:[0][37] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][37] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 37_submod_0
DEBUG:root:[0][37] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][37] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 37
DEBUG:root:[0][37] Populating result of type <class 'torch.Tensor'> for 37_submod_0
DEBUG:root:[37] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][37] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[38] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][38] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[37] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][37] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][38] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][38] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][38] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 38_submod_0
DEBUG:root:[0][38] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][37] Executing transfer of value ValueReference(0, 37_submod_0) initiated by stage 1 for 37_submod_1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][38] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 38
DEBUG:root:[0][38] Populating result of type <class 'torch.Tensor'> for 38_submod_0
DEBUG:root:[38] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][38] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[39] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][39] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[38] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][38] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][38] Executing transfer of value ValueReference(0, 38_submod_0) initiated by stage 1 for 38_submod_1
DEBUG:root:[0][39] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[39] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][39] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][39] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][39] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 39_submod_0
DEBUG:root:[0][39] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[40] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][40] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][39] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[39] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][40] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][40] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][40] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 40_submod_0
DEBUG:root:[root][39] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][40] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][39] Executing transfer of value ValueReference(0, 39_submod_0) initiated by stage 1 for 39_submod_1
INFO:root:[0] Running forward module for microbatch 39
DEBUG:root:[40] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][40] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[41] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][41] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][39] Populating result of type <class 'torch.Tensor'> for 39_submod_0
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][40] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 40
DEBUG:root:[40] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][41] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][41] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][40] Populating result of type <class 'torch.Tensor'> for 40_submod_0
DEBUG:root:[root][40] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][41] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 41_submod_0
DEBUG:root:[0][41] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[41] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][40] Executing transfer of value ValueReference(0, 40_submod_0) initiated by stage 1 for 40_submod_1
DEBUG:root:[root][41] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][41] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 41
DEBUG:root:[42] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][42] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][41] Populating result of type <class 'torch.Tensor'> for 41_submod_0
DEBUG:root:[0][41] Executing transfer of value ValueReference(0, 41_submod_0) initiated by stage 1 for 41_submod_1
DEBUG:root:[41] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][42] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][42] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][41] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][42] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 42_submod_0
DEBUG:root:[0][42] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[42] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[root][42] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][42] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 42
DEBUG:root:[0][42] Populating result of type <class 'torch.Tensor'> for 42_submod_0
DEBUG:root:[43] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][43] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[42] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][43] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][43] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][43] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 43_submod_0
DEBUG:root:[0][43] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[root][42] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][42] Executing transfer of value ValueReference(0, 42_submod_0) initiated by stage 1 for 42_submod_1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][43] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 43
DEBUG:root:[0][43] Populating result of type <class 'torch.Tensor'> for 43_submod_0
DEBUG:root:[43] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][43] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[44] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][44] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[43] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][43] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][44] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][44] Invoke call found 0 ValueReference arguments
DEBUG:root:[44] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][44] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 44_submod_0
DEBUG:root:[0][43] Executing transfer of value ValueReference(0, 43_submod_0) initiated by stage 1 for 43_submod_1
DEBUG:root:[root][44] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][44] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][44] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 44
DEBUG:root:[0][44] Populating result of type <class 'torch.Tensor'> for 44_submod_0
DEBUG:root:[45] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][45] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[44] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][44] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][45] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[45] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][45] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][44] Executing transfer of value ValueReference(0, 44_submod_0) initiated by stage 1 for 44_submod_1
DEBUG:root:[root][45] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][45] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 45_submod_0
DEBUG:root:[0][45] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][45] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[46] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
INFO:root:[0] Running forward module for microbatch 45
DEBUG:root:[0][45] Populating result of type <class 'torch.Tensor'> for 45_submod_0
DEBUG:root:[root][46] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][45] Executing transfer of value ValueReference(0, 45_submod_0) initiated by stage 1 for 45_submod_1
DEBUG:root:[45] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][46] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][46] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][46] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 46_submod_0
DEBUG:root:[0][46] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][46] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 46
DEBUG:root:[0][46] Populating result of type <class 'torch.Tensor'> for 46_submod_0
DEBUG:root:[root][45] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[46] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][46] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[47] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][47] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[46] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][46] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][47] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][47] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][47] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 47_submod_0
DEBUG:root:[47] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][47] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0][46] Executing transfer of value ValueReference(0, 46_submod_0) initiated by stage 1 for 46_submod_1
DEBUG:root:[root][47] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][47] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[48] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
INFO:root:[0] Running forward module for microbatch 47
DEBUG:root:[root][48] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][47] Executing transfer of value ValueReference(0, 47_submod_0) initiated by stage 1 for 47_submod_1
DEBUG:root:[0][47] Populating result of type <class 'torch.Tensor'> for 47_submod_0
DEBUG:root:[47] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][48] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][48] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][48] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 48_submod_0
DEBUG:root:[0][48] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][48] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[root][47] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
INFO:root:[0] Running forward module for microbatch 48
DEBUG:root:[0][48] Populating result of type <class 'torch.Tensor'> for 48_submod_0
DEBUG:root:[48] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][48] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[49] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][49] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[48] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][48] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][49] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][49] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][49] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 49_submod_0
DEBUG:root:[0][49] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][49] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[49] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][48] Executing transfer of value ValueReference(0, 48_submod_0) initiated by stage 1 for 48_submod_1
INFO:root:[0] Running forward module for microbatch 49
DEBUG:root:[root][49] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[50] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][49] Populating result of type <class 'torch.Tensor'> for 49_submod_0
DEBUG:root:[root][50] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[49] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][49] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[50] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][50] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[51] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][51] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[50] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][50] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[51] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][51] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[52] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][52] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[51] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][51] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[52] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][52] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[53] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][53] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[52] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][52] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[53] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][53] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][49] Executing transfer of value ValueReference(0, 49_submod_0) initiated by stage 1 for 49_submod_1
DEBUG:root:[0][50] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][50] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][50] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 50_submod_0
DEBUG:root:[0][50] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][51] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][50] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 50
DEBUG:root:[0][51] Executing transfer of value ValueReference(0, 51_submod_0) initiated by stage 1 for 51_submod_1
DEBUG:root:[0][51] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][51] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 51_submod_0
DEBUG:root:[0][52] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][52] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][52] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 52_submod_0
DEBUG:root:[0][51] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][52] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0][53] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][50] Populating result of type <class 'torch.Tensor'> for 50_submod_0
DEBUG:root:[0][52] Executing transfer of value ValueReference(0, 52_submod_0) initiated by stage 1 for 52_submod_1
DEBUG:root:[0] Current ready runlist keys: dict_keys(['51_submod_0'])
DEBUG:root:[0][50] Executing transfer of value ValueReference(0, 50_submod_0) initiated by stage 1 for 50_submod_1
DEBUG:root:[0][53] Invoke call found 0 ValueReference arguments
DEBUG:root:[0] Dequeueing workitem from set of 2
DEBUG:root:[0][53] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 53_submod_0
DEBUG:root:[0][51] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[0][53] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys(['52_submod_0'])
INFO:root:[0] Running forward module for microbatch 51
DEBUG:root:[54] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][54] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][51] Populating result of type <class 'torch.Tensor'> for 51_submod_0
DEBUG:root:[0] Dequeueing workitem from set of 2
DEBUG:root:[0][52] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 52
DEBUG:root:[0][54] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][54] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][54] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 54_submod_0
DEBUG:root:[0][54] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys(['53_submod_0'])
DEBUG:root:[0][53] Executing transfer of value ValueReference(0, 53_submod_0) initiated by stage 1 for 53_submod_1
DEBUG:root:[0][52] Populating result of type <class 'torch.Tensor'> for 52_submod_0
DEBUG:root:[0] Dequeueing workitem from set of 2
DEBUG:root:[0][53] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 53
DEBUG:root:[0][53] Populating result of type <class 'torch.Tensor'> for 53_submod_0
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][54] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 54
DEBUG:root:[0][54] Populating result of type <class 'torch.Tensor'> for 54_submod_0
DEBUG:root:[53] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][53] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[54] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][54] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[55] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][55] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[54] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][54] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][55] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][55] Invoke call found 0 ValueReference arguments
DEBUG:root:[55] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][55] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 55_submod_0
DEBUG:root:[root][55] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][55] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[56] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][54] Executing transfer of value ValueReference(0, 54_submod_0) initiated by stage 1 for 54_submod_1
DEBUG:root:[root][56] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][55] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[55] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][56] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][56] Invoke call found 0 ValueReference arguments
INFO:root:[0] Running forward module for microbatch 55
DEBUG:root:[root][55] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][56] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 56_submod_0
DEBUG:root:[0][56] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][55] Executing transfer of value ValueReference(0, 55_submod_0) initiated by stage 1 for 55_submod_1
DEBUG:root:[0][55] Populating result of type <class 'torch.Tensor'> for 55_submod_0
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][56] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 56
DEBUG:root:[0][56] Populating result of type <class 'torch.Tensor'> for 56_submod_0
DEBUG:root:[56] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][56] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[57] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][57] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[56] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][56] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][57] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][57] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][57] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 57_submod_0
DEBUG:root:[0][57] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][57] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 57
DEBUG:root:[0][57] Populating result of type <class 'torch.Tensor'> for 57_submod_0
DEBUG:root:[0][56] Executing transfer of value ValueReference(0, 56_submod_0) initiated by stage 1 for 56_submod_1
DEBUG:root:[57] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[root][57] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[58] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][58] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[57] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][57] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][58] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][58] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][58] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 58_submod_0
DEBUG:root:[0][58] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[58] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0][57] Executing transfer of value ValueReference(0, 57_submod_0) initiated by stage 1 for 57_submod_1
DEBUG:root:[root][58] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][58] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 58
DEBUG:root:[0][58] Populating result of type <class 'torch.Tensor'> for 58_submod_0
DEBUG:root:[59] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][59] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[58] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][58] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][59] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][59] Invoke call found 0 ValueReference arguments
DEBUG:root:[0][59] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 59_submod_0
DEBUG:root:[0][59] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[59] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][58] Executing transfer of value ValueReference(0, 58_submod_0) initiated by stage 1 for 58_submod_1
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][59] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[root][59] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
INFO:root:[0] Running forward module for microbatch 59
DEBUG:root:[0][59] Populating result of type <class 'torch.Tensor'> for 59_submod_0
DEBUG:root:[60] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][60] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[59] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][60] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[root][59] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][59] Executing transfer of value ValueReference(0, 59_submod_0) initiated by stage 1 for 59_submod_1
DEBUG:root:[0][60] Invoke call found 0 ValueReference arguments
DEBUG:root:[60] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][60] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 60_submod_0
DEBUG:root:[root][60] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][60] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[61] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][60] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
DEBUG:root:[root][61] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
INFO:root:[0] Running forward module for microbatch 60
DEBUG:root:[0][60] Populating result of type <class 'torch.Tensor'> for 60_submod_0
DEBUG:root:[60] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0][60] Executing transfer of value ValueReference(0, 60_submod_0) initiated by stage 1 for 60_submod_1
DEBUG:root:[root][60] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][61] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[61] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][61] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][61] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][61] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 61_submod_0
DEBUG:root:[0][61] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[62] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[root][62] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][61] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 61
DEBUG:root:[0][61] Populating result of type <class 'torch.Tensor'> for 61_submod_0
DEBUG:root:[0][61] Executing transfer of value ValueReference(0, 61_submod_0) initiated by stage 1 for 61_submod_1
DEBUG:root:[61] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][61] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][62] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[62] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][62] Invoke call found 0 ValueReference arguments
DEBUG:root:[root][62] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][62] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 62_submod_0
DEBUG:root:[63] Issue command to run %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][62] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][62] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 62
DEBUG:root:[root][63] Issuing Phase.FORWARD invocation for target submod_0 on stage 0
DEBUG:root:[0][62] Populating result of type <class 'torch.Tensor'> for 62_submod_0
DEBUG:root:[0][62] Executing transfer of value ValueReference(0, 62_submod_0) initiated by stage 1 for 62_submod_1
DEBUG:root:[62] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[root][62] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][63] Received invoke call for %submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})
DEBUG:root:[0][63] Invoke call found 0 ValueReference arguments
DEBUG:root:[63] Issue command to run %submod_1 : [#users=1] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
DEBUG:root:[0][63] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 63_submod_0
DEBUG:root:[root][63] Issuing Phase.FORWARD invocation for target submod_1 on stage 1
DEBUG:root:[0][63] No RRef arguments. Scheduling directly as READY workitem
DEBUG:root:[0] Current ready runlist keys: dict_keys([])
DEBUG:root:[63] Issue command to run %submod_2 : [#users=1] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
DEBUG:root:[0] Dequeueing workitem from set of 1
DEBUG:root:[0][63] Got WorkItem WorkItem(%submod_0 : [#users=1] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0] Running forward module for microbatch 63
DEBUG:root:[0][63] Executing transfer of value ValueReference(0, 63_submod_0) initiated by stage 1 for 63_submod_1
DEBUG:root:[root][63] Issuing Phase.FORWARD invocation for target submod_2 on stage 2
DEBUG:root:[0][63] Populating result of type <class 'torch.Tensor'> for 63_submod_0
DEBUG:root:[root] Retrieving output values from 64 chunks
DEBUG:root:[0] Issue command to run return submod_2
DEBUG:root:[1] Issue command to run return submod_2
DEBUG:root:[2] Issue command to run return submod_2
DEBUG:root:[3] Issue command to run return submod_2
DEBUG:root:[4] Issue command to run return submod_2
DEBUG:root:[5] Issue command to run return submod_2
DEBUG:root:[6] Issue command to run return submod_2
DEBUG:root:[7] Issue command to run return submod_2
DEBUG:root:[8] Issue command to run return submod_2
DEBUG:root:[9] Issue command to run return submod_2
DEBUG:root:[10] Issue command to run return submod_2
DEBUG:root:[11] Issue command to run return submod_2
DEBUG:root:[12] Issue command to run return submod_2
DEBUG:root:[13] Issue command to run return submod_2
DEBUG:root:[14] Issue command to run return submod_2
DEBUG:root:[15] Issue command to run return submod_2
DEBUG:root:[16] Issue command to run return submod_2
DEBUG:root:[17] Issue command to run return submod_2
DEBUG:root:[18] Issue command to run return submod_2
DEBUG:root:[19] Issue command to run return submod_2
DEBUG:root:[20] Issue command to run return submod_2
DEBUG:root:[21] Issue command to run return submod_2
DEBUG:root:[22] Issue command to run return submod_2
DEBUG:root:[23] Issue command to run return submod_2
DEBUG:root:[24] Issue command to run return submod_2
DEBUG:root:[25] Issue command to run return submod_2
DEBUG:root:[26] Issue command to run return submod_2
DEBUG:root:[27] Issue command to run return submod_2
DEBUG:root:[28] Issue command to run return submod_2
DEBUG:root:[29] Issue command to run return submod_2
DEBUG:root:[30] Issue command to run return submod_2
DEBUG:root:[31] Issue command to run return submod_2
DEBUG:root:[32] Issue command to run return submod_2
DEBUG:root:[33] Issue command to run return submod_2
DEBUG:root:[34] Issue command to run return submod_2
DEBUG:root:[35] Issue command to run return submod_2
DEBUG:root:[36] Issue command to run return submod_2
DEBUG:root:[37] Issue command to run return submod_2
DEBUG:root:[38] Issue command to run return submod_2
DEBUG:root:[39] Issue command to run return submod_2
DEBUG:root:[40] Issue command to run return submod_2
DEBUG:root:[41] Issue command to run return submod_2
DEBUG:root:[42] Issue command to run return submod_2
DEBUG:root:[43] Issue command to run return submod_2
DEBUG:root:[44] Issue command to run return submod_2
DEBUG:root:[45] Issue command to run return submod_2
DEBUG:root:[46] Issue command to run return submod_2
DEBUG:root:[47] Issue command to run return submod_2
DEBUG:root:[48] Issue command to run return submod_2
DEBUG:root:[49] Issue command to run return submod_2
DEBUG:root:[50] Issue command to run return submod_2
DEBUG:root:[51] Issue command to run return submod_2
DEBUG:root:[52] Issue command to run return submod_2
DEBUG:root:[53] Issue command to run return submod_2
DEBUG:root:[54] Issue command to run return submod_2
DEBUG:root:[55] Issue command to run return submod_2
DEBUG:root:[56] Issue command to run return submod_2
DEBUG:root:[57] Issue command to run return submod_2
DEBUG:root:[58] Issue command to run return submod_2
DEBUG:root:[59] Issue command to run return submod_2
DEBUG:root:[60] Issue command to run return submod_2
DEBUG:root:[61] Issue command to run return submod_2
DEBUG:root:[62] Issue command to run return submod_2
DEBUG:root:[63] Issue command to run return submod_2
